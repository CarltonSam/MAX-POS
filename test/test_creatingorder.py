# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.chrome.service import Service

class TestCreatingorder():
  def setup_method(self, method):
    chrome_options = Options()
    chrome_options.headless = False  # Set to True to run in headless mode
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_creatingorder(self):
    self.driver.get("http://127.0.0.1:8000/")
    self.driver.set_window_size(1054, 800)
    self.driver.find_element(By.ID, "email").click()
    self.driver.find_element(By.ID, "email").send_keys("admin")
    self.driver.find_element(By.ID, "password").click()
    self.driver.find_element(By.ID, "password").send_keys("1234")
    self.driver.find_element(By.CSS_SELECTOR, "button").click()
    self.driver.find_element(By.LINK_TEXT, "ORDERS").click()
    self.driver.find_element(By.CSS_SELECTOR, ".item-card:nth-child(1)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".item-card:nth-child(1)").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".item-card:nth-child(1)")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".item-card:nth-child(3)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".item-card:nth-child(3)").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".item-card:nth-child(3)")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".item-card:nth-child(2)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".item-card:nth-child(2)").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".item-card:nth-child(2)")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .quantity-input")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).click_and_hold().perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .quantity-input")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .quantity-input")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).release().perform()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .quantity-input").click()
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .quantity-input").send_keys("2")
    self.driver.find_element(By.CSS_SELECTOR, "tr:nth-child(1) .quantity-input").click()
    self.driver.find_element(By.ID, "customer_id").click()
    self.driver.find_element(By.ID, "customer_id").send_keys("C001")
    self.driver.find_element(By.ID, "order_id").click()
    self.driver.find_element(By.ID, "order_id").send_keys("4")
    self.driver.find_element(By.CSS_SELECTOR, "button:nth-child(9)").click()
  
